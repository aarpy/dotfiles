#!/bin/bash

### Curby's GeekTool process listing script (ps+top version)
### by Michael 'Curby' Lee
### v1.00.00, 2007-02-17

###   Description
#
#  Outputs a list of processes using the most CPU time recently,
#  processes having used the most CPU time since they started, and
#  processes using the most memory (largest resident memory size).
#
#  Compared to geektool-ps and geektool-top, this runs the slowest
#  but displays the heftiest programs sorted in three ways and has
#  the slimmest output (horizonally).
#

###   Suggested use
#
#  This script can be executed from the OS X commandline without
#  administrative priveleges, but is intended for use with GeekTool
#  with a refresh time of 10 seconds.  The number of processes 
#  displayed can be customized below.  This script was tested on
#  OS X v10.4.8 with GeekTool v2.1.2(112).  The script may fail with
#  other versions of ps and top.
#

###   License
#
#  Copyright (C) 2007  Michael Lee <kirbysdl@hotmail.com>
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#



#-------------------------------------------------------------------------------
#  Configuration
#-------------------------------------------------------------------------------
cpu_rows=15
time_rows=15
mem_rows=15



#-------------------------------------------------------------------------------
#  Output
#-------------------------------------------------------------------------------
echo "COMMAND      PID %CPU"
ps -c -r -ax -o command,pid,pcpu | sed 's/^\(.\{10\}\).\{6\}\(.\{6\}\)..\(.\{4\}\)$/\1\2 \3/' | head -n $(($cpu_rows+1)) | tail -n $cpu_rows
